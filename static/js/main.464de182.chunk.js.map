{"version":3,"sources":["components/Instructions/Instructions.module.scss","App.module.scss","../../contracts/Wallet.sol","utils/getWeb3.js","components/Ballot/index.js","components/BallotAdmin/index.js","components/Instructions/index.js","App.js","serviceWorker.js","index.js","components/BallotAdmin/BallotAdmin.module.scss","components/Ballot/Ballot.module.scss"],"names":["module","exports","instructions","question","separator","step","instruction","inline","code","App","wrapper","setup","contracts","notice","widgets","loader","App-logo-spin","__webpack_require__","p","getGanacheWeb3","getWeb3","Promise","resolve","reject","window","addEventListener","Object","asyncToGenerator","regenerator_default","a","mark","_callee","web3","_web","provider","_web2","wrap","_context","prev","next","ethereum","Web3","enable","t0","console","log","providers","HttpProvider","process","stop","this","Ballot","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleSubmitRegistration","e","preventDefault","registerVoter","state","name","onNameChange","bind","assertThisInitialized","evt","setState","target","value","parentNode","classList","add","_this$props","contract","ballotName","proposal","voteState","voteCount","voterCount","finalCount","isAddressRegistered","hasAddressVoted","castVote","react_default","createElement","className","styles","ballot","dataPoint","index_es","address","_address","label","Fragment","buttons","onSubmit","width","placeholder","onChange","required","type","disabled","onClick","Component","BallotAdmin","handleSubmitName","updateName","handleSubmitProposal","updateProposal","validatedName","validatedProposal","onProposalChange","contractOfficial","startVotingPeriod","endVotingPeriod","ballotAdmin","updates","defaultValue","Instructions","addressDefault","getDefaultAddress","location","reload","concat","accounts","href","rel","ganacheAccounts","length","renderSetup","renderMetamask","renderUpgrade","renderAutoUpgrade","renderCounterSetup","renderFAQ","renderEVM","formatBallotState","number","Number","storageValue","getGanacheAddresses","ganacheProvider","eth","getAccounts","abrupt","sent","componentDidMount","_callee2","Wallet","hotLoaderDisabled","networkId","networkType","isMetaMask","balance","instance","instanceWallet","deployedNetwork","_context2","require","net","getId","getNetworkType","currentProvider","getBalance","utils","toWei","fromWei","Contract","abi","networks","toString","wallet","refreshValues","setInterval","t1","alert","error","getName","getProposal","getVoteState","getVoteCount","getVoterCount","getFinalCount","getOfficialAddress","updateTokenOwner","_callee3","response","_context3","methods","_callee4","_context4","_callee5","_context5","getState","_callee6","_context6","_callee7","_context7","_callee8","_context8","_callee9","_this$state","_context9","officialAddress","_callee10","_this$state2","_context10","_callee11","_this$state3","_context11","_callee12","_this$state4","_context12","send","from","_callee13","choice","_this$state5","_context13","doVote","_callee14","_this$state6","_context14","startVote","_callee15","_this$state7","_context15","endVote","_callee16","_this$state8","_context16","_callee17","_this$state9","_context17","interval","clearInterval","instructionsKey","Instructions_Instructions","renderDeployCheck","BallotAdmin_BallotAdmin","assign","Ballot_Ballot","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.464de182.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"instructions\":\"Instructions_instructions__1vAKJ\",\"question\":\"Instructions_question__1U4BY\",\"separator\":\"Instructions_separator__28krM\",\"step\":\"Instructions_step__38ltS\",\"instruction\":\"Instructions_instruction__21tcr\",\"inline\":\"Instructions_inline__32VzK\",\"code\":\"Instructions_code__1BUAS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__t4GWO\",\"wrapper\":\"App_wrapper__5kecl\",\"setup\":\"App_setup__84rAd\",\"contracts\":\"App_contracts__1eVt4\",\"notice\":\"App_notice___rUlr\",\"widgets\":\"App_widgets__Y_X5P\",\"loader\":\"App_loader__2GpTV\",\"App-logo-spin\":\"App_App-logo-spin__8H0jp\"};","module.exports = __webpack_public_path__ + \"static/media/Wallet.e1ceb807.sol\";","import Web3 from \"web3\";\nconst FALLBACK_WEB3_PROVIDER = process.env.REACT_APP_NETWORK || 'http://0.0.0.0:8545';\n\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          await window.ethereum.enable();\n          // Acccounts now exposed\n          resolve(web3);\n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        console.log(\"Injected web3 detected.\");\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        const provider = new Web3.providers.HttpProvider(\n          FALLBACK_WEB3_PROVIDER\n        );\n        const web3 = new Web3(provider);\n        console.log(\"No web3 instance injected, using Infura/Local web3.\");\n        resolve(web3);\n      }\n    });\n  });\n\nconst getGanacheWeb3 = () => {\n  const isProd = process.env.NODE_ENV === 'production';\n  if (isProd) {\n    return null;\n  }\n  const provider = new Web3.providers.HttpProvider(\n    'http://0.0.0.0:8545'\n  );\n  const web3 = new Web3(provider);\n  console.log(\"No local ganache found.\");\n  return web3;\n}\n\nexport default getWeb3;\nexport { getGanacheWeb3 };\n","import React, { Component } from \"react\";\nimport { PublicAddress, Button, Form, Field, Input } from 'rimble-ui';\nimport styles from './Ballot.module.scss';\n\nexport default class Ballot extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      name: ''\n    }\n    this.onNameChange = this.onNameChange.bind(this)\n\n  }\n\n  onNameChange(evt) {\n    this.setState({\n      name: evt.target.value\n    });\n    evt.target.parentNode.classList.add('was-validated');\n  }\n\n  handleSubmitRegistration = e => {\n    e.preventDefault();\n    this.props.registerVoter(this.state.name)\n  };\n  render()  {\n    const {\n      contract,\n      ballotName,\n      proposal,\n      voteState,\n      voteCount,\n      voterCount,\n      finalCount,\n      isAddressRegistered,\n      hasAddressVoted,\n      castVote\n    } = this.props;\n    return (\n      <div className={styles.ballot}>\n        <h3> A Ballot Contract Instance </h3>\n\n        <div className={styles.dataPoint}>\n          <div className={styles.value}>\n            <PublicAddress address={contract._address} />\n          </div>\n        </div>\n        <div className={styles.dataPoint}>\n          <div className={styles.label}>\n            Ballot Name:\n          </div>\n          <div className={styles.value}>\n            {ballotName}\n          </div>\n        </div>\n        <div className={styles.dataPoint}>\n          <div className={styles.label}>\n            Description:\n          </div>\n          <div className={styles.value}>\n            {proposal}\n          </div>\n        </div>\n\n        <div className={styles.dataPoint}>\n          <div className={styles.label}>\n            Ballot Status:\n          </div>\n          <div className={styles.value}>\n            {voteState}\n          </div>\n        </div>\n\n        <div className={styles.dataPoint}>\n          <div className={styles.label}>\n            Voters Registered:\n          </div>\n          <div className={styles.value}>\n            {voterCount}\n          </div>\n        </div>\n\n        <div className={styles.dataPoint}>\n          <div className={styles.label}>\n            Votes Cast:\n          </div>\n          <div className={styles.value}>\n            {voteCount}\n          </div>\n        </div>\n\n\n        {voteState !== 'Ended' ? <>\n          <div className={styles.buttons}>\n            <div>\n            <Form onSubmit={this.handleSubmitRegistration}>\n                <Field width={1}>\n                  <Input\n                    placeholder=\"Voter Name\"\n                    onChange={this.onNameChange}\n                    required\n                    width={1}\n                  />\n                </Field>\n                <Button\n                  type=\"submit\"\n                  width={1}\n                  disabled={voteState !== 'Ended' && isAddressRegistered}\n                >\n                  Register to Vote\n                </Button>\n              </Form>\n            </div>\n          \n            <Button\n              onClick={() => castVote(true)}\n              disabled={hasAddressVoted || voteState !== 'Voting'}\n            >\n              Vote Yes\n            </Button>\n            <Button\n              onClick={() => castVote(false)}\n              disabled={hasAddressVoted || voteState !== 'Voting'}\n            >\n              Vote No\n            </Button>\n\n            {hasAddressVoted ? <>\n              <div className={styles.dataPoint}>\n              <div className={styles.label}>\n                Your vote has been received.\n              </div>\n              <div className={styles.value}>\n                \n              </div>\n            </div>\n\n            </> : null}\n\n          </div>\n        \n        </> : <>\n              \n        <h3>Voting Complete!</h3>\n        <div className={styles.dataPoint}>\n          <div className={styles.label}>\n            Total \"Yes\" responses:\n          </div>\n          <div className={styles.value}>\n            {finalCount}\n          </div>\n        </div>\n\n        </>}\n\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Button, Form, Field, Input, Textarea } from 'rimble-ui';\nimport styles from './BallotAdmin.module.scss';\n\nexport default class BallotAdmin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: this.props.ballotName,\n      validatedName: false,\n      proposal: this.props.proposal,\n      validatedProposal: false\n    };\n    this.onNameChange = this.onNameChange.bind(this)\n    this.onProposalChange = this.onProposalChange.bind(this)\n  }\n  onNameChange(evt) {\n    this.setState({\n      name: evt.target.value\n    });\n    evt.target.parentNode.classList.add('was-validated');\n  }\n  onProposalChange(evt) {\n    this.setState({\n      proposal: evt.target.value\n    });\n    evt.target.parentNode.classList.add('was-validated');\n  }\n\n  handleSubmitName = e => {\n    e.preventDefault();\n    this.props.updateName(this.state.name)\n  };\n  handleSubmitProposal = e => {\n    e.preventDefault();\n    this.props.updateProposal(this.state.proposal)\n  };\n\n  render()  {\n    const {\n      contractOfficial,\n      startVotingPeriod,\n      endVotingPeriod,\n      voteState\n    } = this.props;\n    return (\n      <div className={styles.ballotAdmin}>\n        <h3> Ballot Admin </h3>\n        <div className={styles.label}>\n          Update contract state\n        </div>\n        <div className={styles.updates}>\n      \n          <Form onSubmit={this.handleSubmitName}>\n            <Field width={1}>\n              <Input\n                defaultValue={this.state.name}\n                onChange={this.onNameChange}\n                required\n                width={1}\n              />\n            </Field>\n            <Button\n              disabled={voteState !== 'Created' || !contractOfficial}\n              type=\"submit\"\n              width={1}\n             >\n              Update Name\n            </Button>\n          </Form>\n          <Form onSubmit={this.handleSubmitProposal}>\n            <Field width={1}>\n              <Textarea\n                defaultValue={this.state.proposal}\n                onChange={this.onProposalChange}\n                required\n                width={1}\n              />\n            </Field>\n            <Button\n              disabled={voteState !== 'Created' || !contractOfficial}\n              type=\"submit\"\n              width={1}\n            >\n              Update Proposal\n            </Button>\n          </Form>\n        </div>\n\n        <div className={styles.buttons}>\n          <Button\n            onClick={startVotingPeriod}\n            disabled={voteState !== 'Created' || !contractOfficial}\n            >\n            Start Voting Period\n          </Button>\n          <Button\n            onClick={endVotingPeriod}\n            disabled={voteState !== 'Voting' || !contractOfficial}\n            >\n            End Voting Period\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Button } from \"rimble-ui\";\nimport styles from './Instructions.module.scss';\n\nexport default class Instructions extends Component {\n\n  renderCounterSetup() {\n    const addressDefault = this.getDefaultAddress();\n    return (\n      <div className={styles.instructions}>\n        <h2> Build your first app with ZepKit </h2>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            Add the Counter contract to your project.\n          </div>\n          <div className={styles.code}>\n            <code>\n              zos add Counter\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            Connect with your local blockchain by opening a session (Note that we automatically prefilled your ganache account).\n          </div>\n          <div className={styles.code}>\n            <code>\n              zos session --network development --from {addressDefault} --expires 3600\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            Let's compile the Counter contract.\n          </div>\n          <div className={styles.code}>\n            <code>\n              zos push --deploy-dependencies\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            We create an instance of our contract and deploy it.\n          </div>\n          <div className={styles.code}>\n            <code>\n              zos create Counter --init initialize --args 2\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            Add a log to verify that the contract is available. Before line 77 in App.js, add:\n          </div>\n          <div className={styles.code}>\n            <code>\n              console.log(instance);\n            </code>\n          </div>\n          <p> You should see a log that contains the Counter instance in your browser console </p>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            Done! Refresh the page to interact with your instance of the counter contract.\n          </div>\n          <Button onClick={() => window.location.reload()}>\n            Reload\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  renderSetup() {\n    const isProd = process.env.NODE_ENV === 'production';\n    if (!isProd) {\n      return (\n        <div className={styles.instructions}>\n          <h1> ZepKit is running! </h1>\n          <div className={styles.step}>\n            <div className={styles.instruction}>\n              Congratulations! Your application is correctly setup.\n              Now, you have two options:\n            </div>\n          </div>\n          <div className={styles.step}>\n            <div className={styles.instruction}>\n              a. Start your project from scratch.\n            </div>\n            <div className={styles.code}>\n              <code>\n                npm run start-blank\n              </code>\n            </div>\n          </div>\n\n          <div className={styles.step}>\n            <div className={styles.instruction}>\n              b. Visit the tutorials. Start with the <a href='/counter'> Counter</a> page to deploy and interact with your first contract.\n            </div>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className={styles.instructions}>\n        <h1> Installation </h1>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            Install ZeppelinOS, Ganache, and Truffle.\n          </div>\n          <div className={styles.code}>\n            <code>\n              npm install -g truffle@5.0.2 ganache-cli@6.3.0 zos@2.2.0\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            Create a folder for your app and enter inside.\n          </div>\n          <div className={styles.code}>\n            <code>\n              mkdir my-app && cd my-app\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            Unbox the ZepKit.\n          </div>\n          <div className={styles.code}>\n            <code>\n              truffle unbox zeppelinos/zepkit\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n          Run your local blockchain.\n          </div>\n          <div className={styles.code}>\n            <code>\n              ganache-cli --secure -u 0 -u 1 -u 2 --deterministic\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n          Initialize the ZeppelinOS project.\n          </div>\n          <div className={styles.code}>\n            <code>\n              zos init zepkit\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            Switch to the client folder and run the web application to continue.\n          </div>\n          <div className={styles.code}>\n            <code>\n              cd client; npm run start\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            The ZepKit should be running locally! Continue the instructions on your localhost.\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  renderMetamask() {\n    const addressDefault = this.getDefaultAddress();\n    const code =`\n      web3.eth.sendTransaction({from: '${addressDefault}',to:'${this.props.accounts[0]}', value: web3.utils.toWei(\"0.5\", \"ether\")})\n    `;\n    return (\n      <div className={styles.instructions}>\n        <h2> Fund your Metamask account </h2>\n        <p> You need some ETH to be able to send transactions. </p>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            1. Open a terminal and access the truffle console\n          </div>\n          <div className={styles.code}>\n            <code>\n              truffle console\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            2. Send 0.5 ETH from one of your ganache accounts to your Metamask account.\n          </div>\n          <div className={styles.code}>\n            <code>\n              {code}\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            3. Congratulations!! You can now interact with the contract and increase the counter.\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  renderUpgrade() {\n    return (\n      <div className={styles.instructions}>\n        <h2> Upgrading your contract </h2>\n        <p> Thanks to ZeppelinOS, you can upgrade the code of your contract to add more functionality. </p>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            1. Open <span>contracts/Counter.sol</span> and uncomment the decreaseCounter method (lines 32-36).\n          </div>\n          <div className={styles.code}>\n            <code>\n              {`// function decreaseCounter(uint256 amount) public returns (bool) {`}\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            2. Save the changes and compile and push the new changes to the network.\n          </div>\n          <div className={styles.code}>\n            <code>\n              zos push\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            3. Update the already deployed contract with the new code\n          </div>\n          <div className={styles.code}>\n            <code>\n              zos update Counter\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            4. Congratulations! You have upgraded your contract and you can now decrease the counter.\n          </div>\n          <Button onClick={() => window.location.reload()}>\n            Reload\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  renderAutoUpgrade() {\n    return (\n      <div className={styles.instructions}>\n        <h2> Upgrading on Development Network </h2>\n        <p> Thanks to ZeppelinOS and Solidity Hot Loader your smart contracts would reload automatically after you save a .sol file while preserving a state. </p>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            1. Open <span>contracts/Counter.sol</span> and uncomment the decreaseCounter method (lines 32-36).\n          </div>\n          <div className={styles.code}>\n            <code>\n              {`// function decreaseCounter(uint256 amount) public returns (bool) {`}\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            2. Save the changes and wait for the .sol files to compile. Upon completion, ZOS will push and update your smart contracts\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            3. Congratulations! You have upgraded your contract and you can now decrease the counter.\n          </div>\n        </div>\n        <div className={styles.separator} />\n        <p> * On a non development network you would have to run <strong>zos push</strong> and <strong>zos update</strong> commands manually. </p>\n      </div>\n    );\n  }\n\n  renderFAQ() {\n    const addressDefault = this.getDefaultAddress();\n    return (\n      <div className={styles.instructions}>\n        <h2> FAQ </h2>\n        <div className={styles.question}>\n          Q: How do I deploy to other networks?\n        </div>\n        <div className={styles.separator} />\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            1. Enter the mnemonic of the account you want to use to deploy in the <span className={styles.inline}> .env</span> file located in the top level folder.\n          </div>\n          <div className={styles.code}>\n            <code>\n              mnemonic='fill'\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            2. Start a session on the desired network. See <span className={styles.inline}>truffle-config</span> file for available options:\n          </div>\n          <div className={styles.code}>\n            <code>\n              zos session --network NETWORK_NAME --from {addressDefault} --expires 3600\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            3. Push the project contracts and deploy the dependencies (if any).\n          </div>\n          <div className={styles.code}>\n            <code>\n              zos push --deploy-dependencies\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            4. Create the instances\n          </div>\n          <div className={styles.code}>\n            <code>\n              zos create CONTRACT_NAME --init --args ARGS...\n            </code>\n          </div>\n        </div>\n        <div className={styles.question}>\n          Q: How do I start from scratch and remove the tutorial?\n        </div>\n        <div className={styles.separator} />\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            Run this command from the top level folder.\n          </div>\n          <div className={styles.code}>\n            <code>\n              npm run start-blank\n            </code>\n          </div>\n        </div>\n        <div className={styles.question}>\n          Q: How do I run tests?\n        </div>\n        <div className={styles.separator} />\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            1. To execute smart contract tests run:\n          </div>\n          <div className={styles.code}>\n            <code>\n              truffle test\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            2. To test your React components, (inside the client folder) run:\n          </div>\n          <div className={styles.code}>\n            <code>\n              npm run test\n            </code>\n          </div>\n        </div>\n        <div className={styles.question}>\n          Q: How do I connect to other networks from my local website?\n        </div>\n        <div className={styles.separator} />\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            1. Change the fallback provider by switching <span className={styles.inline}> REACT_APP_NETWORK </span> inside the .env file located in the client folder.\n          </div>\n          <div className={styles.code}>\n            <code>\n              REACT_APP_NETWORK = https://mainnet.infura.io/v3/d6760e62b67f4937ba1ea2691046f06d\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          Take into account that this only switches the default provider. If you are using Metamask, you only\n          need to switch network from the extension.\n        </div>\n      </div>\n    );\n  }\n\n  renderEVM() {\n    const addressDefault = this.getDefaultAddress();\n    return (\n      <div className={styles.instructions}>\n        <h2> Using EVM Packages </h2>\n        <p> ZeppelinOS allows us to link packages that have been already deployed to the blockchain, instead of wasting resources deploying them again every time we need them in a project. </p>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            1. Connect with your local blockchain by opening a session (Note that we automatically prefilled your ganache account).\n          </div>\n          <div className={styles.code}>\n            <code>\n              zos session --network development --from {addressDefault} --expires 3600\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            2. We need the ERC20 standard. Let's grab it from open zeppelin.\n          </div>\n          <div className={styles.code}>\n            <code>\n              zos link openzeppelin-eth\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            3. Add the Wallet contract to your ZeppelinOS project.\n          </div>\n          <div className={styles.code}>\n            <code>\n              zos add Wallet\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            4. Push the Wallet and deploy the dependencies (OpenZeppelin EVM).\n          </div>\n          <div className={styles.code}>\n            <code>\n              zos push --deploy-dependencies\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            5. Create an instance of the wallet.\n          </div>\n          <div className={styles.code}>\n            <code>\n              {`zos create Wallet --init --args ${this.props.accounts[0]}`}\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            6. Congratulations! Your wallet contract should be good to go.\n          </div>\n          <Button onClick={() => window.location.reload()}>\n            Reload\n          </Button>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            7. For extra fun, create an instance of the token to use within your wallet.\n          </div>\n          <div className={styles.code}>\n            <code>\n              {`zos create openzeppelin-eth/StandaloneERC20 --init --args 'MyToken,MYT,8,10000000000,${this.props.accounts[0]},[],[]'`}\n            </code>\n          </div>\n          <p> Interact with it using the truffle console. More info <a\n            href=\"https://docs.zeppelinos.org/docs/linking.html\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\">\n          here</a>. </p>\n        </div>\n      </div>\n    );\n  }\n\n  getDefaultAddress() {\n    const { ganacheAccounts } = this.props;\n    return (ganacheAccounts && ganacheAccounts.length) > 2 ? ganacheAccounts[2] : '<ADDRESS>';\n  }\n\n  render()  {\n    const { name } = this.props;\n    switch (name) {\n      case 'setup':\n        return this.renderSetup();\n      case 'metamask':\n        return this.renderMetamask();\n      case 'upgrade':\n        return this.renderUpgrade();\n      case 'upgrade-auto':\n        return this.renderAutoUpgrade();\n      case 'counter':\n        return this.renderCounterSetup();\n      case 'faq':\n        return this.renderFAQ();\n      case 'evm':\n        return this.renderEVM();\n      default:\n        return this.renderSetup();\n    }\n  }\n}\n","import React, { Component } from \"react\";\nimport getWeb3, { getGanacheWeb3 } from \"./utils/getWeb3\";\nimport BallotUI from \"./components/Ballot/index.js\";\nimport BallotAdmin from \"./components/BallotAdmin/index.js\";\nimport Instructions from \"./components/Instructions/index.js\";\n\nimport styles from './App.module.scss';\nimport Ballot from './contracts/Ballot.json'\n\nconst formatBallotState = (number)  => {\n  switch (Number(number)) {\n    case 0:\n      return 'Created';\n    case 1:\n      return 'Voting';\n    case 2: \n      return 'Ended';\n    default:\n    return '';\n  }\n}\nclass App extends Component {\n  state = {\n    storageValue: 0,\n    web3: null,\n    accounts: null,\n    contract: null,\n  };\n\n  getGanacheAddresses = async () => {\n    if (!this.ganacheProvider) {\n      this.ganacheProvider = getGanacheWeb3();\n    }\n    if (this.ganacheProvider) {\n      return await this.ganacheProvider.eth.getAccounts();\n    }\n    return [];\n  }\n\n  componentDidMount = async () => {\n    // let Ballot = {};\n    let Wallet = {};\n    try {\n      // Ballot = require(\"../../build.contracts/Ballot.sol\")\n      Wallet = require(\"../../contracts/Wallet.sol\");\n    } catch (e) {\n      console.log(e);\n    }\n    console.log('Ballot: ', Ballot)\n    try {\n      \n        const hotLoaderDisabled = true\n        // Get network provider and web3 instance.\n        const web3 = await getWeb3();\n        // Use web3 to get the user's accounts.\n        const accounts = await web3.eth.getAccounts();\n        // Get the contract instance.\n        const networkId = await web3.eth.net.getId();\n        const networkType = await web3.eth.net.getNetworkType();\n        console.log('nerworktype, id: ', networkType, networkId)\n\n        const isMetaMask = web3.currentProvider.isMetaMask;\n        let balance = accounts.length > 0 ? await web3.eth.getBalance(accounts[0]): web3.utils.toWei('0');\n        balance = web3.utils.fromWei(balance, 'ether');\n        let instance = null;\n        let instanceWallet = null;\n        let deployedNetwork = null;\n        // if (Ballot.networks) {\n        //   deployedNetwork = Ballot.networks[networkId.toString()];\n        //   if (deployedNetwork) {\n            instance = new web3.eth.Contract(\n              Ballot.abi,\n              process.env.REACT_APP_CONTRACT_ADDRESS\n            );\n        //   }\n        // }\n        if (Wallet.networks) {\n          deployedNetwork = Wallet.networks[networkId.toString()];\n          if (deployedNetwork) {\n            instanceWallet = new web3.eth.Contract(\n              Wallet.abi,\n              deployedNetwork && deployedNetwork.address,\n            );\n          }\n        }\n        if (instance || instanceWallet) {\n          // Set web3, accounts, and contract to the state, and then proceed with an\n          // example of interacting with the contract's methods.\n          this.setState({ web3,\n            // ganacheAccounts,\n            accounts, balance, networkId, networkType, hotLoaderDisabled,\n            isMetaMask, contract: instance, wallet: instanceWallet }, () => {\n              this.refreshValues(instance, instanceWallet);\n              setInterval(() => {\n                this.refreshValues(instance, instanceWallet);\n              }, 5000);\n            });\n        }\n        else {\n          this.setState({ web3, \n            // ganacheAccounts, \n            accounts, balance, networkId, networkType, hotLoaderDisabled, isMetaMask });\n        }\n      \n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      console.error(error);\n    }\n  };\n\n  componentWillUnmount() {\n    if (this.interval) {\n      clearInterval(this.interval);\n    }\n  }\n\n  refreshValues = (instance, instanceWallet) => {\n    if (instance) {\n      try{\n        this.getName();\n        this.getProposal();\n        this.getVoteState();\n        this.getVoteCount();\n        this.getVoterCount();\n        this.getFinalCount();\n        this.getOfficialAddress();\n        this.isAddressRegistered();\n        this.hasAddressVoted();\n\n      } catch (e) {\n        console.log('e: ', e)\n      }\n    }\n    if (instanceWallet) {\n      this.updateTokenOwner();\n    }\n  }\n\n  // fetch data that will drive the UI\n  getName = async () => {\n    const { contract } = this.state;\n    const response = await contract.methods.getName().call();\n    this.setState({ ballotName: response})\n  }\n  getProposal = async () => {\n    const { contract } = this.state;\n    const response = await contract.methods.getProposal().call();\n    this.setState({ proposal: response })\n  }\n  getVoteState = async () => {\n    const { contract } = this.state;\n    const response = await contract.methods.getState().call();\n    this.setState({ voteState: formatBallotState(response) });\n  }\n  getVoteCount = async () => {\n    const { contract } = this.state;\n    const response = await contract.methods.getVoteCount().call();\n    this.setState({ voteCount: response });\n  }\n  getVoterCount = async () => {\n    const { contract } = this.state;\n    const response = await contract.methods.getVoterCount().call();\n    this.setState({ voterCount: response });\n  }\n  getFinalCount = async () => {\n    const { contract } = this.state;\n    const response = await contract.methods.getVoterCount().call();\n    this.setState({ finalCount: response });\n  }\n  getOfficialAddress = async () => {\n    const { accounts, contract } = this.state;\n    const response = await contract.methods.getOfficialAddress().call();\n    this.setState({\n      contractOfficial: response.toString() === accounts[0].toString(),\n      officialAddress: response\n    });\n  }\n  isAddressRegistered = async () => {\n    const { accounts, contract } = this.state; \n    const response = await contract.methods.isAddressRegistered(accounts[0]).call();\n    this.setState({ isAddressRegistered: response });\n  }\n  hasAddressVoted = async () => {\n    const { accounts, contract } = this.state; \n    const response = await contract.methods.hasAddressVoted(accounts[0]).call();\n    this.setState({ hasAddressVoted: response }); \n  }\n\n  // user actions\n  registerVoter = async (name) => {\n    const { accounts, contract } = this.state;\n    await contract.methods.registerVoter(name).send({ from: accounts[0] });\n    this.getVoterCount();\n    this.isAddressRegistered();\n  }\n  castVote = async (choice) => {\n    const { accounts, contract } = this.state;\n    await contract.methods.doVote(choice).send({ from: accounts[0] });\n    this.getVoteCount();\n    this.hasAddressVoted();\n  }\n  startVotingPeriod = async () => {\n    const { accounts, contract } = this.state;\n    await contract.methods.startVote().send({ from: accounts[0] });\n    this.getVoteState();\n  }\n  endVotingPeriod = async () => {\n    const { accounts, contract } = this.state;\n    await contract.methods.endVote().send({ from: accounts[0] });\n    this.getVoteState();\n    this.getFinalCount();\n  }\n  updateName = async (name) => {\n    const { accounts, contract } = this.state;\n    await contract.methods.updateName(name).send({ from: accounts[0] });\n    this.getName();\n  }\n  updateProposal = async (proposal) => {\n    const { accounts, contract } = this.state;\n    await contract.methods.updateProposal(proposal).send({ from: accounts[0] });\n    this.getProposal();\n  }\n\n  // render\n  renderLoader() {\n    return (\n      <div className={styles.loader}>\n        <h3> Loading Web3, accounts, and contract...</h3>\n        <p> Unlock your metamask </p>\n      </div>\n    );\n  }\n\n  renderDeployCheck(instructionsKey) {\n    return (\n      <div className={styles.setup}>\n        <div className={styles.notice}>\n          Your <b> contracts are not deployed</b> in this network. Two potential reasons: <br />\n          <p>\n            Maybe you are in the wrong network? Point Metamask to localhost.<br />\n            You contract is not deployed. Follow the instructions below.\n          </p>\n        </div>\n        <Instructions\n          ganacheAccounts={this.state.ganacheAccounts}\n          name={instructionsKey} accounts={this.state.accounts} />\n      </div>\n    );\n  }\n\n  render() {\n    // const { accounts, ganacheAccounts } = this.state;\n    return (\n      <div className={styles.App}>\n        <div className={styles.wrapper}>\n          {/* {!this.state.web3 && this.renderLoader()} */}\n          {this.state.web3 && !this.state.contract && (\n            this.renderDeployCheck('ballot')\n          )}\n          {this.state.web3 && this.state.contract && (\n            <div className={styles.contracts}>\n              <h1>{this.state.ballotName}: Yes or No?</h1>\n\n              <div className={styles.widgets}>\n                <BallotAdmin\n                  updateName={this.updateName}\n                  updateProposal={this.updateProposal}\n                  startVotingPeriod={this.startVotingPeriod}\n                  endVotingPeriod={this.endVotingPeriod}\n                  {...this.state}\n                />\n                <BallotUI\n                  registerVoter={this.registerVoter}\n                  castVote={this.castVote}\n                  {...this.state}\n                />\n              </div>\n              {/* {this.state.balance < 0.1 && (\n                <Instructions\n                  ganacheAccounts={ganacheAccounts}\n                  name=\"metamask\"\n                  accounts={accounts} />\n              )} */}\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './layout/index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ballotAdmin\":\"BallotAdmin_ballotAdmin__NhpQg\",\"dataPoint\":\"BallotAdmin_dataPoint__2-X53\",\"value\":\"BallotAdmin_value__1LA5x\",\"buttons\":\"BallotAdmin_buttons__15Ldn\",\"updates\":\"BallotAdmin_updates__3-dhj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ballot\":\"Ballot_ballot__3_lZX\",\"dataPoint\":\"Ballot_dataPoint__1UgHD\",\"value\":\"Ballot_value__1L7Ax\",\"buttons\":\"Ballot_buttons__2DTID\"};"],"sourceRoot":""}